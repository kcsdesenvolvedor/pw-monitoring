const snmp = require("../");

const store = snmp.createModuleStore();

//store.loadFromFile("/var/tmp/mibs/CISCO-SMI.mib");
//store.loadFromFile("/var/tmp/mibs/CISCO-TC.mib");
//store.loadFromFile("/home/mark/snmp/test/CISCO-CONFIG-MAN-MIB.MIB");
store.loadFromFile("/home/mark/snmp/test/smiv1.mib");
// store.loadFromFile("/home/mark/snmp/test/smiv2.mib");

const mod1 = store.getModule("SMIv1-TEST-MIB");
// const mod2 = store.getModule("SMIv2-TEST-MIB");

// Object.keys(mod1)
//   .forEach(key => console.log(key));

console.log(JSON.stringify(mod1, null, 2));
// console.log(JSON.stringify(mod2, null, 2));

//const mod = store.getModule("CISCO-CONFIG-MAN-MIB");
//console.log(mod);
//console.log(JSON.stringify(mod.ccmHistoryEventTerminalUser, null, 2));
//console.log(JSON.stringify(mod.ciscoConfigManCTIDNotifyGroup, null, 2));
//console.log(JSON.stringify(mod.ciscoConfigManCTIDObjectGroup, null, 2));
//console.log(JSON.stringify(mod.HistoryEventMedium, null, 2));
//console.log(JSON.stringify(mod.ccmHistoryRunningLastChanged, null, 2));
//console.log(JSON.stringify(mod.ccmHistoryRunningLastSaved, null, 2));

// console.log(JSON.stringify(store.translations.moduleToOid, null, 2));
// console.log(JSON.stringify(store.translations.moduleToPath, null, 2));
// console.log(JSON.stringify(store.translations.oidToPath, null, 2));
// console.log(JSON.stringify(store.translations.oidToModule, null, 2));
// console.log(JSON.stringify(store.translations.pathToOid, null, 2));
// console.log(JSON.stringify(store.translations.pathToModule, null, 2));

console.log('iso.org.dod.internet.snmpV2.snmpModules.snmpMIB.snmpMIBObjects.snmpTraps.warmStart => ' + store.translate('iso.org.dod.internet.snmpV2.snmpModules.snmpMIB.snmpMIBObjects.snmpTraps.warmStart', 'oid'));
console.log('iso.org.dod.internet.snmpV2.snmpModules.snmpMIB.snmpMIBObjects.snmpTraps.warmStart => ' + store.translate('iso.org.dod.internet.snmpV2.snmpModules.snmpMIB.snmpMIBObjects.snmpTraps.warmStart', 'module'));
console.log('iso.org.dod.internet.snmpV2.snmpModules.snmpMIB.snmpMIBObjects.snmpTraps.warmStart => ' + store.translate('iso.org.dod.internet.snmpV2.snmpModules.snmpMIB.snmpMIBObjects.snmpTraps.warmStart', 'path'));
console.log('1.3.6.1.2.1.1.1 => ' + store.translate('1.3.6.1.2.1.1.1', 'oid'));
console.log('1.3.6.1.2.1.1.1 => ' + store.translate('1.3.6.1.2.1.1.1', 'module'));
console.log('1.3.6.1.2.1.1.1 => ' + store.translate('1.3.6.1.2.1.1.1', 'path'));
console.log('RFC1158-MIB::sysDescr => ' + store.translate('RFC1158-MIB::sysDescr', snmp.OidFormat.oid));
console.log('SNMPv2-MIB::sysDescr => ' + store.translate('SNMPv2-MIB::sysDescr', snmp.OidFormat.oid));
console.log('RFC1158-MIB::sysDescr => ' + store.translate('SNMPv2-MIB::sysDescr', snmp.OidFormat.path));
console.log('RFC1158-MIB::sysDescr => ' + store.translate('SNMPv2-MIB::sysDescr', snmp.OidFormat.module));

// console.log('RFC1158-MIB::ipAdEntReasmMaxSize => ' + store.translate('RFC1158-MIB::ipAdEntReasmMaxSizesz', snmp.OidFormat.oid));
